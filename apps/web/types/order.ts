// –°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤
export type OrderStatus = 
  | 'created'      // –°–æ–∑–¥–∞–Ω
  | 'pending'      // –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã
  | 'processing'   // –í –æ–±—Ä–∞–±–æ—Ç–∫–µ
  | 'building'     // –í —Å–±–æ—Ä–∫–µ
  | 'shipping'     // –í –¥–æ—Å—Ç–∞–≤–∫–µ
  | 'delivered'    // –î–æ—Å—Ç–∞–≤–ª–µ–Ω
  | 'completed'    // –ó–∞–≤–µ—Ä—à—ë–Ω
  | 'cancelled';   // –û—Ç–º–µ–Ω—ë–Ω

// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç–∞—Ç—É—Å–µ
export interface OrderStatusInfo {
  status: OrderStatus;
  label: string;
  description: string;
  color: string;
  icon: string;
  isCompleted: boolean;
  isActive: boolean;
}

// –ó–∞–ø–∏—Å—å –≤ –∂—É—Ä–Ω–∞–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
export interface OrderLogEntry {
  id: string;
  order_id: string;
  status_from: OrderStatus | null;
  status_to: OrderStatus;
  changed_by: string; // 'system' | 'admin' | 'customer'
  changed_at: string;
  comment?: string;
  metadata?: Record<string, any>;
}

// –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Ç–∏–ø –∑–∞–∫–∞–∑–∞
export interface Order {
  id: string;
  customer_name: string;
  customer_email: string;
  customer_phone: string;
  delivery_address: string;
  notes?: string;
  items: OrderItem[];
  total_price: number;
  status: OrderStatus;
  order_type: 'guest' | 'auth';
  user_id?: number;
  created_at: string;
  updated_at: string;
  estimated_delivery?: string;
  tracking_number?: string;
  logs: OrderLogEntry[];
  has_review?: boolean;
}

// –ü–æ–∑–∏—Ü–∏—è –∑–∞–∫–∞–∑–∞
export interface OrderItem {
  component_id: number;
  component_name: string;
  category_name: string;
  price: number;
  quantity: number;
  total_price: number;
}

// –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
export interface CreateOrderData {
  customer_name: string;
  customer_email: string;
  customer_phone: string;
  delivery_address: string;
  notes?: string;
  items: OrderItem[];
  total_price: number;
  order_type: 'guest' | 'auth';
  user_id?: number;
}

// –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
export interface UpdateOrderStatusData {
  order_id: string;
  status: OrderStatus;
  comment?: string;
  metadata?: Record<string, any>;
}

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã —Å—Ç–∞—Ç—É—Å–æ–≤
export const ORDER_STATUSES: Record<OrderStatus, OrderStatusInfo> = {
  created: {
    status: 'created',
    label: '–°–æ–∑–¥–∞–Ω',
    description: '–ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏',
    color: 'text-blue-400',
    icon: 'üìù',
    isCompleted: false,
    isActive: true,
  },
  pending: {
    status: 'pending',
    label: '–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã',
    description: '–û–∂–∏–¥–∞–µ—Ç—Å—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã',
    color: 'text-yellow-400',
    icon: 'üí∞',
    isCompleted: false,
    isActive: true,
  },
  processing: {
    status: 'processing',
    label: '–í –æ–±—Ä–∞–±–æ—Ç–∫–µ',
    description: '–ó–∞–∫–∞–∑ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º',
    color: 'text-purple-400',
    icon: '‚öôÔ∏è',
    isCompleted: false,
    isActive: true,
  },
  building: {
    status: 'building',
    label: '–í —Å–±–æ—Ä–∫–µ',
    description: '–ö–æ–º–ø—å—é—Ç–µ—Ä —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è –≤ –º–∞—Å—Ç–µ—Ä—Å–∫–æ–π',
    color: 'text-orange-400',
    icon: 'üîß',
    isCompleted: false,
    isActive: true,
  },
  shipping: {
    status: 'shipping',
    label: '–í –¥–æ—Å—Ç–∞–≤–∫–µ',
    description: '–ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∫—É—Ä—å–µ—Ä–æ–º',
    color: 'text-indigo-400',
    icon: 'üöö',
    isCompleted: false,
    isActive: true,
  },
  delivered: {
    status: 'delivered',
    label: '–î–æ—Å—Ç–∞–≤–ª–µ–Ω',
    description: '–ó–∞–∫–∞–∑ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω –∫–ª–∏–µ–Ω—Ç—É',
    color: 'text-green-400',
    icon: 'üì¶',
    isCompleted: true,
    isActive: false,
  },
  completed: {
    status: 'completed',
    label: '–ó–∞–≤–µ—Ä—à—ë–Ω',
    description: '–ó–∞–∫–∞–∑ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤—ã–ø–æ–ª–Ω–µ–Ω',
    color: 'text-green-500',
    icon: '‚úÖ',
    isCompleted: true,
    isActive: false,
  },
  cancelled: {
    status: 'cancelled',
    label: '–û—Ç–º–µ–Ω—ë–Ω',
    description: '–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω',
    color: 'text-red-400',
    icon: '‚ùå',
    isCompleted: true,
    isActive: false,
  },
};

// –ü–æ—Ä—è–¥–æ–∫ —Å—Ç–∞—Ç—É—Å–æ–≤ –¥–ª—è —Ç–∞–π–º–ª–∞–π–Ω–∞
export const ORDER_STATUS_FLOW: OrderStatus[] = [
  'created',
  'pending',
  'processing',
  'building',
  'shipping',
  'delivered',
  'completed',
];

// –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å—Ç–∞—Ç—É—Å–∞–º–∏
export const getStatusInfo = (status: OrderStatus): OrderStatusInfo => {
  return ORDER_STATUSES[status];
};

export const getNextStatus = (currentStatus: OrderStatus): OrderStatus | null => {
  const currentIndex = ORDER_STATUS_FLOW.indexOf(currentStatus);
  if (currentIndex === -1 || currentIndex === ORDER_STATUS_FLOW.length - 1) {
    return null;
  }
  return ORDER_STATUS_FLOW[currentIndex + 1];
};

export const getPreviousStatus = (currentStatus: OrderStatus): OrderStatus | null => {
  const currentIndex = ORDER_STATUS_FLOW.indexOf(currentStatus);
  if (currentIndex <= 0) {
    return null;
  }
  return ORDER_STATUS_FLOW[currentIndex - 1];
};

export const isStatusCompleted = (status: OrderStatus): boolean => {
  return ORDER_STATUSES[status].isCompleted;
};

export const getStatusProgress = (status: OrderStatus): number => {
  const index = ORDER_STATUS_FLOW.indexOf(status);
  if (index === -1) return 0;
  return ((index + 1) / ORDER_STATUS_FLOW.length) * 100;
};
